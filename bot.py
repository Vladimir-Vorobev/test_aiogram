# -*- coding: utf-8 -*-
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="1770602296:AAGUQCL-5MrSoNf4ByyhAxakYLnww7c0-zA")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –±–æ—Ç–∞
dp = Dispatcher(bot)
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –æ—Ç–≤–µ—Ç–æ–≤
from messages import mes


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test1
@dp.message_handler(commands=['start', 'restart'])
async def cmd_test1(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ['–ö–≤–µ—Å—Ç', '–ü—Ä–æ–≥—É–ª–∫–∞']
    keyboard.add(*buttons)
    user = message.from_user.first_name
    if user:
        if message.from_user.last_name:
            user += ' ' + message.from_user.last_name
        await message.answer("{}, —Ç{}".format(user, mes.welcome()))
    else:
        await message.answer("–¢{}".format(mes.welcome()))
    await message.answer("–í–æ—Ç –∏ –ø–µ—Ä–≤–∞—è —Ä–∞–∑–≤–∏–ª–∫–∞ üó∫")
    await message.answer(mes.describe_quest_walk(), reply_markup=keyboard)


@dp.message_handler(Text(equals="–ö–≤–µ—Å—Ç"))
async def with_puree(message: types.Message):
    await message.reply(mes.start_quest(), reply_markup=types.ReplyKeyboardRemove())
    await message.answer(mes.restart())


@dp.message_handler(Text(equals="–ü—Ä–æ–≥—É–ª–∫–∞"))
async def without_puree(message: types.Message):
    with open("media/images/museum.jpg", "rb") as file:
        data = file.read()
    await message.reply(mes.start_walk(), reply_markup=types.ReplyKeyboardRemove())
    await bot.send_photo(message.from_user.id, photo=data)
    await message.answer(mes.restart())


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)
